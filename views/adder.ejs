<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Item Adder</title>
    <link rel="stylesheet" href="/css/adder.css">

</head>

<body>
    <input type="text" id="items" value="<%= items1  %>" hidden>
    <input type="text" id="type" value="<%= type  %>" hidden>
    <% if(type===1){ %>
        <input type="text" name="" id="details" value="<%= details %>" hidden>
        <% } %>
            <table id="itemTable">
                <thead>
                    <tr>
                        <th>Item Name</th>
                        <th>Type</th>
                        <th>Count</th>
                        <th>Add/Remove</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Items will be added here dynamically -->
                    <tr>
                        <td><input type="text" onchange="changeOptions()" id="itemName" list="itemSuggestions"
                                autocomplete="off">
                            <datalist id="itemSuggestions">
                                <% Object.entries(items).forEach(([key, value])=> { %>
                                    <option value=<%=value.names[0]+"-"+value.names[1] %>>
                                        <%});%>
                            </datalist>
                        </td>
                        <td><select id="itemType">

                            </select></td>
                        <td><input type="number" id="itemCount" min="1"></td>
                        <td>
                            <button style="position: relative;bottom: .5rem;" type="button" onclick="addItem()">Add
                                Item</button>
                        </td>
                    </tr>
                </tbody>
            </table>
            <br>
            <h1>Customer Details...</h1>
            <form class="customer-form" method="post">
                <!-- Customer form -->
                <div class="container">

                    <div class="matrix-cell">
                        <div class="customer-form">
                            <label for="customerName">Customer Name:</label>
                            <input type="text" id="customerName" name="customerName" required>

                            <label for="eventDate">Event Date:</label>
                            <input type="date" id="eventDate" name="eventDate" required>
                        </div>
                    </div>

                    <div class="matrix-cell">
                        <!-- Second cell content goes here -->
                        <div class="customer-form">
                            <label for="mobileNumber">Mobile Number:</label>
                            <input type="tel" id="mobileNumber" name="mobileNumber" required>

                            <label for="address">Address:</label>
                            <input type="text" id="address" name="address" required>
                        </div>
                    </div>
                </div>
                <input type="text" name="list" id="list" value="[]" hidden>
                <div class="customer-form" style="min-width: 20rem;">
                    <button type="submit">Submit List</button>
                    <br>
                    <br>
                    <% if (type===1){ %>
                        <a class="register-button" href="<%= " /admin/bill/"+billno %>">Bill</a>
                        <% } %>
                </div>
            </form>

            <script>
                let items = JSON.parse(document.getElementById("items").value);
                let details = {}
                let list = [];
                let bill = ""
                if (document.getElementById('type').value === "1") {
                    details = JSON.parse(document.getElementById("details").value)
                    bill = "/admin/bill/" + details[0]["_id"]
                    list = details[0]["list"]
                    updateTable();
                    updatedata();
                    upadteAddress();
                    console.log(list);
                }
                var itemCount = 0;
                function removeItem(rowIndex) {
                    var table = document.getElementById("itemTable").getElementsByTagName('tbody')[0];

                    // Remove the item from the list based on the index
                    list.splice(rowIndex - 1, 1);
                    // Update the data variable with the modified list
                    updatedata();
                    updateTable();
                }

                function updateTable() {
                    var table = document.getElementById("itemTable").getElementsByTagName('tbody')[0];
                    while (table.rows.length > 1) {
                        table.deleteRow(0);
                    }
                    for (var i = 0; i < list.length; i++) {
                        var table = document.getElementById("itemTable").getElementsByTagName('tbody')[0];
                        var newRow = table.insertRow(table.rows.length - 1);
                        var cell1 = newRow.insertCell(0);
                        var cell2 = newRow.insertCell(1);
                        var cell3 = newRow.insertCell(2);
                        var cell4 = newRow.insertCell(3);

                        cell1.innerHTML = list[i]["name"];
                        cell2.innerHTML = list[i]["type"];
                        cell3.innerHTML = list[i]["count"];
                        var removeButton = document.createElement('button');
                        removeButton.innerHTML = 'Remove';
                        removeButton.onclick = function () {
                            removeItem(newRow.rowIndex);
                        };
                        cell4.appendChild(removeButton);
                    }
                }
                function upadteAddress() {
                    document.getElementById("customerName").value = details[0]["name"]
                    document.getElementById("mobileNumber").value = details[0]["mobile"]
                    document.getElementById("address").value = details[0]["address"]
                    document.getElementById("eventDate").value = details[0]["date"]
                }

                function showMessage(type, message) {
                    // Create a new popup element
                    var popup = document.createElement('div');
                    popup.classList.add('popup', type);

                    // Create a close button
                    var closeButton = document.createElement('span');
                    closeButton.classList.add('close-btn');
                    closeButton.innerHTML = 'x';

                    // Append the close button and message to the popup
                    popup.appendChild(closeButton);
                    popup.innerHTML += message;

                    // Append the popup to the body
                    document.body.appendChild(popup);

                    // Trigger reflow to enable the animation
                    void popup.offsetWidth;

                    // Show the popup
                    popup.classList.add('show');

                    // Set a timer to remove the popup after 2 seconds
                    setTimeout(function () {
                        popup.classList.remove('show');
                        setTimeout(function () {
                            popup.remove();
                        }, 300);
                    }, 2000);

                    // Add an event listener to remove the popup when the close button is clicked
                    closeButton.addEventListener('click', function () {
                        popup.classList.remove('show');
                        setTimeout(function () {
                            popup.remove();
                        }, 300);
                    });
                }

                function showError(message) {
                    // Use EJS syntax to pass the message to the client-side JavaScript
                    showMessage('error', message);
                }

                function showSuccess(message) {
                    // Use EJS syntax to pass the message to the client-side JavaScript
                    showMessage('success', message);
                }
                function addItem() {
                    var itemName = document.getElementById("itemName").value;
                    var itemType = document.getElementById("itemType").value;
                    var itemCount = document.getElementById("itemCount").value;
                    if (!(itemName && itemCount && itemType)) {
                        showError("Incomplete item!");
                        return;
                    }
                    list.push({ name: itemName, type: itemType, count: itemCount })

                    // Clear the form fields
                    document.getElementById("itemName").value = "";
                    document.getElementById("itemType").value = "";
                    document.getElementById("itemCount").value = "";

                    updatedata();
                    updateTable();
                }
                function updatedata() {
                    document.getElementById("list").value = JSON.stringify(list)
                }

                function changeOptions(e) {
                    // Your logic to determine the new options
                    const inputValue = document.getElementById("itemName").value.split("-")[0];
                    const selectElement = document.getElementById("itemType");
                    try {
                        const newOptions = items[inputValue].types;
                        selectElement.options.length = 0;
                        newOptions.forEach(optionValue => {
                            const optionElement = document.createElement("option");
                            optionElement.value = optionValue;
                            optionElement.textContent = optionValue;
                            selectElement.appendChild(optionElement);
                        });
                    } catch (error) {
                        const optionElement = document.createElement("option");
                        optionElement.textContent = "No item";
                        selectElement.appendChild(optionElement);
                        console.log(error);
                    }


                }
            </script>
</body>

</html>